#N canvas 18 41 1117 765 12;
#X msg 165 265 line;
#X obj 65 203 list fromsymbol;
#X obj 65 227 route list;
#X obj 65 265 list tosymbol;
#X text 141 227 check if symbol given;
#X obj 65 160 symbol \$1;
#X obj 65 116 loadbang;
#X text 136 153 set initial function from parameter if present, f 25;
#X text 203 266 fallback to linear function;
#X text 99 704 output eased 0..1;
#X obj 609 705 s \$0-value;
#X obj 486 191 r \$0-inout-cubic;
#X obj 506 330 r \$0-in-cubic;
#X obj 609 349 expr pow($f1 \, 3);
#X obj 500 441 r \$0-out-cubic;
#X obj 521 686 r \$0-linear;
#X obj 449 686 r \$0-line;
#X obj 493 215 r \$0-inout-expo;
#X obj 513 354 r \$0-in-expo;
#X obj 507 465 r \$0-out-expo;
#X obj 492 167 r \$0-inout-sine;
#X obj 513 306 r \$0-in-sine;
#X obj 507 417 r \$0-out-sine;
#X obj 493 528 r \$0-out-bounce;
#X obj 486 594 r \$0-out-elastic;
#X obj 609 76 expr 3*$f1*$f1 - 2*$f1*$f1*$f1;
#X text 610 41 shader smoothstep function. see great explanation here: https://youtu.be/BFld4EBO2RE?t=198, f 49;
#X obj 492 57 r \$0-smoothstep;
#X text 614 99 Ken Perlin's improved quintic smoothstep function - see https://mrl.cs.nyu.edu/~perlin/paper445.pdf, f 49;
#X obj 609 132 expr 6*$f1*$f1*$f1*$f1*$f1 - 15*$f1*$f1*$f1*$f1 + 10*$f1*$f1*$f1, f 64;
#X text 611 166 following formulas copied from https://easings.net/en;
#X obj 47 57 inlet;
#X obj 48 705 outlet;
#X obj 47 403 s;
#X obj 48 647 r \$0-value;
#X obj 209 57 inlet;
#X obj 65 355 symbol;
#X obj 65 307 pack symbol \$0;
#X msg 65 331 \$2-\$1;
#X text 125 646 receive and output eased result;
#X text 51 77 input 0..1 value;
#X text 76 403 set function to send value to;
#X text 209 77 input ease function;
#X text 958 704 Ben Wesch \, 2023;
#X obj 493 253 r \$0-inout-back;
#X obj 513 378 r \$0-in-back;
#X obj 507 489 r \$0-out-back;
#X obj 609 397 expr 2.70158*$f1*$f1*$f1 - 1.70158*$f1*$f1;
#X obj 609 373 expr if($f1==0 \, 0 \, pow(2 \, 10*$f1-10));
#X obj 609 234 expr if($f1==0 \, 0 \, if($f1==1 \, 1 \, if($f1<0.5 \, pow(2 \, 20*$f1-10)/2 \, (2-pow(2 \, -20*$f1+10))/2))), f 65;
#X obj 609 436 expr sin(1.570795*$f1);
#X obj 609 186 expr -(cos(3.14159*$f1)-1)/2;
#X obj 609 210 expr if($f1<0.5 \, 4*pow($f1 \, 3) \, 1-pow(-2.0*$f1+2 \, 3)/2);
#X obj 609 547 expr if($f1<0.3636363 \, 7.5625*$f1*$f1 \, if($f1<0.7272727 \, 7.5625*pow($f1-0.5454545 \, 2)+0.75 \, if($f1<0.9090909 \, 7.5625*pow($f1-0.8181818 \, 2)+0.9375 \, 7.5625*pow($f1-0.9545454 \, 2)+0.984375)));
#X obj 478 113 r \$0-smootherstep;
#X obj 609 484 expr if($f1==1 \, 1 \, 1-pow(2 \, -10*$f1));
#X obj 609 272 expr if($f1<0.5 \, (pow(2*$f1 \, 2) * (7.1898190*$f1-2.5949095))/2 \, (pow(2*$f1-2 \, 2) * (3.5949095*(2*$f1-2)+2.5949095)+2)/2), f 63;
#X text 46 438 FIXME: use precalculated lookup table? (see [ease~]);
#X obj 609 508 expr 1+2.70158*pow($f1-1 \, 3) + 1.70158*pow($f1-1 \, 2);
#X obj 609 460 expr 1-pow(1-$f1 \, 3);
#X obj 609 325 expr 1-cos(1.570795*$f1);
#X obj 448 330 r \$0-in;
#X obj 435 441 r \$0-out;
#X obj 463 647 r \$0-none;
#X obj 535 647 r \$0-step;
#X obj 609 666 expr if($f1<1 \, 0 \, 1);
#X obj 407 191 r \$0-inout;
#X obj 609 613 expr if($f1==0 \, 0 \, if($f1==1 \, 1 \, pow(2 \, -10*$f1) * sin((10*$f1-0.75)*2.0944)+1));
#X connect 0 0 37 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 0 0;
#X connect 3 0 37 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 11 0 52 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X connect 14 0 59 0;
#X connect 15 0 10 0;
#X connect 16 0 10 0;
#X connect 17 0 49 0;
#X connect 18 0 48 0;
#X connect 19 0 55 0;
#X connect 20 0 51 0;
#X connect 21 0 60 0;
#X connect 22 0 50 0;
#X connect 23 0 53 0;
#X connect 24 0 67 0;
#X connect 25 0 10 0;
#X connect 27 0 25 0;
#X connect 29 0 10 0;
#X connect 31 0 33 0;
#X connect 34 0 32 0;
#X connect 35 0 37 0;
#X connect 36 0 33 1;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 44 0 56 0;
#X connect 45 0 47 0;
#X connect 46 0 58 0;
#X connect 47 0 10 0;
#X connect 48 0 10 0;
#X connect 49 0 10 0;
#X connect 50 0 10 0;
#X connect 51 0 10 0;
#X connect 52 0 10 0;
#X connect 53 0 10 0;
#X connect 54 0 29 0;
#X connect 55 0 10 0;
#X connect 56 0 10 0;
#X connect 58 0 10 0;
#X connect 59 0 10 0;
#X connect 60 0 10 0;
#X connect 61 0 13 0;
#X connect 62 0 59 0;
#X connect 63 0 65 0;
#X connect 64 0 65 0;
#X connect 65 0 10 0;
#X connect 66 0 52 0;
#X connect 67 0 10 0;
#X coords 0 765 1 764 32 31 0;
